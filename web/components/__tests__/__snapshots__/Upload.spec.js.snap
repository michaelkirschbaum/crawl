// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Upload should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Upload />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <onlyUpdateForKeys(Loader)
          className=""
          color="#000000"
          height={15}
          heightUnit="px"
          loading={false}
          margin="2px"
          radius={2}
          radiusUnit="px"
          width={5}
          widthUnit="px"
        />,
        <h1>
          Projects
        </h1>,
        <ul />,
        <form
          onSubmit={[Function]}
        >
          <input
            name="name"
            onChange={[Function]}
            placeholder="Name"
            type="text"
          />
          <input
            accept="image/png"
            name="mockup"
            onChange={[Function]}
            type="file"
          />
          <input
            type="submit"
            value="Submit"
          />
        </form>,
      ],
      "className": "Upload",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "",
          "color": "#000000",
          "height": 15,
          "heightUnit": "px",
          "loading": false,
          "margin": "2px",
          "radius": 2,
          "radiusUnit": "px",
          "width": 5,
          "widthUnit": "px",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Projects",
        },
        "ref": null,
        "rendered": "Projects",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="name"
              onChange={[Function]}
              placeholder="Name"
              type="text"
            />,
            <input
              accept="image/png"
              name="mockup"
              onChange={[Function]}
              type="file"
            />,
            <input
              type="submit"
              value="Submit"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "name",
              "onChange": [Function],
              "placeholder": "Name",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "accept": "image/png",
              "name": "mockup",
              "onChange": [Function],
              "type": "file",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <onlyUpdateForKeys(Loader)
            className=""
            color="#000000"
            height={15}
            heightUnit="px"
            loading={false}
            margin="2px"
            radius={2}
            radiusUnit="px"
            width={5}
            widthUnit="px"
          />,
          <h1>
            Projects
          </h1>,
          <ul />,
          <form
            onSubmit={[Function]}
          >
            <input
              name="name"
              onChange={[Function]}
              placeholder="Name"
              type="text"
            />
            <input
              accept="image/png"
              name="mockup"
              onChange={[Function]}
              type="file"
            />
            <input
              type="submit"
              value="Submit"
            />
          </form>,
        ],
        "className": "Upload",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "color": "#000000",
            "height": 15,
            "heightUnit": "px",
            "loading": false,
            "margin": "2px",
            "radius": 2,
            "radiusUnit": "px",
            "width": 5,
            "widthUnit": "px",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Projects",
          },
          "ref": null,
          "rendered": "Projects",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="name"
                onChange={[Function]}
                placeholder="Name"
                type="text"
              />,
              <input
                accept="image/png"
                name="mockup"
                onChange={[Function]}
                type="file"
              />,
              <input
                type="submit"
                value="Submit"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "name",
                "onChange": [Function],
                "placeholder": "Name",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "accept": "image/png",
                "name": "mockup",
                "onChange": [Function],
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "type": "submit",
                "value": "Submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
